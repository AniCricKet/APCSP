<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://nighthawkcoders.github.io/APCSP/feed.xml" rel="self" type="application/atom+xml" /><link href="https://nighthawkcoders.github.io/APCSP/" rel="alternate" type="text/html" /><updated>2022-07-31T21:55:19-05:00</updated><id>https://nighthawkcoders.github.io/APCSP/feed.xml</id><title type="html">APCSP</title><subtitle>AP Computer Science Principles course materials.</subtitle><entry><title type="html">Program Design with App Lab by Code.org</title><link href="https://nighthawkcoders.github.io/APCSP/tutorial/applab" rel="alternate" type="text/html" title="Program Design with App Lab by Code.org" /><published>2022-07-29T00:00:00-05:00</published><updated>2022-07-29T00:00:00-05:00</updated><id>https://nighthawkcoders.github.io/APCSP/tutorial/PBL-applab</id><author><name></name></author><category term="pbl" /><category term="javascript" /><summary type="html"><![CDATA[This Tech Talk focuses on Program Design and enables the student to build a prototype UI through block or script coding using the AppLab tool by Code.org.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://nighthawkcoders.github.io/APCSP/images/applab-tool.png" /><media:content medium="image" url="https://nighthawkcoders.github.io/APCSP/images/applab-tool.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How I got a 5!</title><link href="https://nighthawkcoders.github.io/APCSP/resources/2022/07/27/create-task-bria.html" rel="alternate" type="text/html" title="How I got a 5!" /><published>2022-07-27T00:00:00-05:00</published><updated>2022-07-27T00:00:00-05:00</updated><id>https://nighthawkcoders.github.io/APCSP/resources/2022/07/27/create-task-bria</id><author><name></name></author><category term="resources" /><category term="ApExam" /><summary type="html"><![CDATA[Bria review her path to success on the AP Exam and Create Task project]]></summary></entry><entry><title type="html">USC Code.org Workshop Notes</title><link href="https://nighthawkcoders.github.io/APCSP/workshop/code_dot_org" rel="alternate" type="text/html" title="USC Code.org Workshop Notes" /><published>2022-07-25T00:00:00-05:00</published><updated>2022-07-25T00:00:00-05:00</updated><id>https://nighthawkcoders.github.io/APCSP/workshop/workshop</id><author><name></name></author><category term="resources" /><category term="csp" /><summary type="html"><![CDATA[Primary focus of workshop is to provide a Curriculum Guide and overview of Code.org materials. Code.org is a concept first and soft launch into coding. My approach is pretty much the opposite, jump into deep-end with life supports.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://nighthawkcoders.github.io/APCSP/images/code_logo.svg" /><media:content medium="image" url="https://nighthawkcoders.github.io/APCSP/images/code_logo.svg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Python Web API Endpoints using Jokes</title><link href="https://nighthawkcoders.github.io/APCSP/tutorial/webapi" rel="alternate" type="text/html" title="Python Web API Endpoints using Jokes" /><published>2022-07-23T00:00:00-05:00</published><updated>2022-07-23T00:00:00-05:00</updated><id>https://nighthawkcoders.github.io/APCSP/tutorial/webapi_tutorial</id><author><name></name></author><category term="pbl" /><summary type="html"><![CDATA[A discussion on Web APIs. This is about creating a Web API (Jokes), and creating API that retains data as long as the Web Server is running. This is done using List and Dictionaries as the backend. Ultimately, this example could be extended by adding a database to the backend. However, we are focussing on interaction of Frontend to Backend, this is called an Endpoint.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://nighthawkcoders.github.io/APCSP/images/python_restapi.png" /><media:content medium="image" url="https://nighthawkcoders.github.io/APCSP/images/python_restapi.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Neo4J Graph Database Introduction</title><link href="https://nighthawkcoders.github.io/APCSP/pbl/2022/07/21/neo4j_intro.html" rel="alternate" type="text/html" title="Neo4J Graph Database Introduction" /><published>2022-07-21T00:00:00-05:00</published><updated>2022-07-21T00:00:00-05:00</updated><id>https://nighthawkcoders.github.io/APCSP/pbl/2022/07/21/neo4j_intro</id><author><name></name></author><category term="pbl" /><summary type="html"><![CDATA[A description of the data, and then how to connect and query the database.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://nighthawkcoders.github.io/APCSP/images/neo4j_logo.png" /><media:content medium="image" url="https://nighthawkcoders.github.io/APCSP/images/neo4j_logo.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>